* [[pu][Git link]] - convenience function for copying Git(hub|lab|etc) URL to clipboard
#+begin_src emacs-lisp
  (use-package git-link
    :bind ("C-c g l" . git-link))
#+end_src
https://github.com/thor314/.emacs.d/blob/main/config/misc_packages.org#L2
* Grepping:
- [[https://github.com/dajva/rg.el][ripgrep]] - real gud grepping
- [[https://github.com/mhayashi1120/Emacs-wgrep][Emacs-wgrep: Writable grep buffer and apply the changes]]
Usage: especially great for programming.
(l|r)?grep or rg for the pattern, replace all instances, save the change across all buffers modified.
#+begin_src emacs-lisp
  (use-package wgrep
    :after rg
    :config
    (setq wgrep-auto-save-buffer t
      wgrep-enable-key "r"))
  (use-package rg
    :after wgrep
    :config
    (autoload 'wgrep-rg-setup "wgrep-rg")
    (add-hook 'rg-mode-hook 'wgrep-rg-setup))
#+end_src
* [[https://github.com/vermiculus/sx.el/][sx.el: Stack Exchange for Emacs]]
#+begin_src emacs-lisp
  (use-package sx
    :config
    (bind-keys :prefix "C-r s"
      :prefix-map my-sx-map
      :prefix-docstring "Global keymap for SX."
      ("q" . sx-tab-all-questions)
      ("i" . sx-inbox)
      ("o" . sx-open-link)
      ("u" . sx-tab-unanswered-my-tags)
      ("a" . sx-ask)
      ("s" . sx-search)))
#+end_src
* [[https://github.com/magnars/expand-region.el][expand-region.el: Emacs extension to increase selected region]] - usage: just select the damn region
also see [[https://github.com/leoliu/easy-kill][easy-kill]]
#+begin_src emacs-lisp
	(use-package expand-region
  :bind ("C-=" . er/expand-region))
#+end_src
* [[https://github.com/Fuco1/free-keys][free-keys: Show free keybindings for modkeys or prefixes]] Show what keys are unbound, v useful
#+begin_src emacs-lisp
    (use-package free-keys
      :config (global-set-key (kbd "C-x e") 'free-keys))
#+end_src
* [[https://github.com/justbur/emacs-which-key][which-key: Emacs package that displays available keybinds]] - extremely useful
- [[https://github.com/yanghaoxie/which-key-posframe][Whichkey posframe frontend]]
#+begin_src emacs-lisp
  (use-package which-key
    :init (which-key-mode)
    :config
    (setq which-key-idle-delay .5
      which-key-popup-type 'minibuffer)) ;; doesn't eat half the screen
  (use-package which-key-posframe
    :config
    (which-key-posframe-mode))
#+end_src
[[https://github.com/Fuco1/free-keys][free-keys]].
* [[https://github.com/iqbalansari/restart-emacs][restart-emacs: A simple emacs package to restart emacs]] - smol package for restarting emacs
#+begin_src emacs-lisp
	(use-package restart-emacs
    :config
    (setq restart-emacs-restore-frames nil) ;; try to restore frames
    (global-set-key (kbd "C-x c") 'restart-emacs))
#+end_src
* [[https://github.com/Malabarba/elisp-bug-hunter][elisp-bug-hunter: Hunt down errors in elisp files.]] helper to debug config
#+begin_src emacs-lisp
  (use-package bug-hunter
    :config (global-set-key (kbd "C-x b") 'bug-hunter-init-file)
    (global-set-key (kbd "C-x B") 'bug-hunter-file))
#+end_src
* [[https://www.emacswiki.org/emacs/ReBuilder][EmacsWiki: Re Builder]] - Build and test regex
#+begin_src emacs-lisp
  (use-package re-builder
        :config (global-set-key (kbd "C-x x") 're-builder))
#+end_src
* [[https://www.emacswiki.org/emacs/CrontabMode][EmacsWiki: Crontab Mode]] Major mode for editting crontab files
#+begin_src emacs-lisp
	(use-package crontab-mode
    :config
    (add-to-list 'auto-mode-alist '("\\.?cron\\(tab\\)?\\." . crontab-mode)))
#+end_src
* [[https://www.emacswiki.org/emacs/UndoTree][EmacsWiki: Undo Tree]] - Visualize undo history tree (wow, cool): =C-x u=
#+begin_src emacs-lisp
  (use-package undo-tree
    :config
    (global-undo-tree-mode)
    :config (global-set-key (kbd "C-x u") 'undo-tree-visualize))
#+end_src
* [[https://github.com/lewang/command-log-mode][command-log-mode: log commands to buffer]] - infrequently used mode, useful for demos and alternative to C-h k
#+begin_src emacs-lisp
  (use-package command-log-mode
    :config (global-set-key (kbd "C-x l") 'command-log-mode))
#+end_src
* [[https://github.com/bbatsov/super-save][super-save: Save Emacs buffers when they lose focus]] + make system crash or closing emacs less teriffying
#+begin_src emacs-lisp
    (use-package super-save
      :config (super-save-mode 1)
      (setq super-save-auto-save-when-idle t
        super-save-idle-duration 30
        auto-save-default nil))
#+end_src
* Note to self, I looked at but didn't install X because
- [[https://github.com/abo-abo/ace-window][GitHub - abo-abo/ace-window: Quickly switch windows in Emacs]] - This package seems popular, but I can't remember the last time I had more than 3 windows
- [[https://github.com/jwiegley/alert][GitHub - jwiegley/alert: A Growl-like alerts notifier for Emacs]] - I don't need finer grain on notification (yet)
- [[https://github.com/nex3/perspective-el][GitHub - nex3/perspective-el: Perspectives for Emacs]]  perspective mode, or any of the other window/tab groupers: Ivy views are doing fine at the moment.
- [[https://github.com/editorconfig/editorconfig-emacs][editorconfig]] - universal editor configuration plugin across everyone's favorite editors, because I only collaborate in Rust for the most part, which has a suitable =.rustfmt.toml=  solution.
- [[https://github.com/leoliu/easy-kill][easy-kill]] - because I'm still exploring expand-region, but I may included it in the future

* Deprecated
** =pop-win= - less annoying help and compilation buffers
Not currently using; useful to customize how compilation buffers appear.
#+begin_src emacs-lisp
  ;(use-package popup) ; not making use atm. Creates dropdown ui.
  (use-package popwin
    :config
    (popwin-mode 1)
    ;; popup buffers, if I want to use them
    (setq popwin:popup-window-position 'right))
#+end_src
[[https://github.com/emacsorphanage/popwin][popwin]]. [[https://github.com/auto-complete/popup-el][popup]].

** [[https://github.com/hayamiz/twittering-mode][twittering-mode]] - deprecated; not maintaned, too many warnings and errors, bad auth, okay but not great client
:#+begin_src emacs-lisp
  (use-package twittering-mode
    :config
    (bind-keys :prefix "C-r t"
    :prefix-map my-twit-mode
    :prefix-docstring "Global keymap for twit mode."
      ("t" . twit)
      ("p" . gtwittering-update-status-from-pop-up-buffer)
      ))
  ;; (setq twittering-use-master-password nil)
  ;; fails w/ error: setq: Symbolâ€™s function definition is void: epa--decode-coding-string
  ;; so just put up with authenticating each session
#+end_src
** [[https://github.com/atykhonov/emacs-howdoi][howdoi]] - deprecated; package unfunctional, not maintained
** deprecated: [[https://github.com/jcaw/theme-magic][theme-magic]] Make the rest of linux look more like emacs - package buggy, not maintained
dependency: =pip3 install pywal=
:#+begin_src emacs-lisp
	(use-package theme-magic)
  (theme-magic-from-emacs)
  ;; update the rest of linux when I update emacs' theme
  (theme-magic-export-theme-mode)
#+end_src
** =esup= the startup profiler - deprecated until issue solved
[[https://github.com/jschaf/esup][esup: ESUP - Emacs Start Up Profiler]]
Usage: Run M-x esup to get profiling data. This plus the following are
wonderful for startup info.
: #+begin_src emacs-lisp
	(use-package esup
    :ensure t
    ;; To use MELPA Stable use ":pin melpa-stable",
    :pin melpa)


#+end_src
