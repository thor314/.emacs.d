* Global Settings
** Be less annoying and more nice
#+begin_src emacs-lisp
	(defalias 'yes-or-no-p 'y-or-n-p) ; brevity is the soul of wit
	(setq inhibit-startup-message t)
	(setq gc-cons-threshold 2000000) ; default is 800KB, set to 20MB
	(setq read-process-output-max 3000000) ;; incr data read from process. default is 4kb.
	(setq require-final-newline t)
	(setq next-line-add-newlines t) ; add newline on C-n at EOF
  (setq vc-follow-symlinks 't)
	(setq-default dired-listing-switches "-alh") ; add human-readable units
	(setq-default tab-width 2)
	(setq-default c-basic-offset 2) ; programming modes often use this
	(add-hook 'before-save-hook 'delete-trailing-whitespace)
	;; Put backups~ and #autosaves# in /tmp
	(setq backup-directory-alist
				`((".*" . ,temporary-file-directory)))
	(setq auto-save-file-name-transforms
				`((".*" ,temporary-file-directory t)))
#+end_src

** Turn theses modes off
#+begin_src emacs-lisp
	(auto-composition-mode 0) ; text characters auto-composed by functions
	(blink-cursor-mode 0) ; annoyingly blink the cursor
	(file-name-shadow-mode 0) ; dims unused parts of files in minibuffer
	(line-number-mode 0) ; clutter mode line
	(tool-bar-mode 0)
	(menu-bar-mode 0)
	(scroll-bar-mode 0)
	(set-window-scroll-bars (minibuffer-window) nil nil) ; why scroll bar in minibuffer
#+end_src

** Emacs played in minor key
N2R: Some of these are on by default. I value explicitness.
#+begin_src emacs-lisp
	(auto-compression-mode 1) ; auto-handle (un)?zip on visit zipped file
	(auto-encryption-mode 1) ; automatic file (en|de)cryption
	(delete-selection-mode 1) ; delete region on entry
	(use-package diff-hl) ; highlight diffs from last commit in fringe
	(global-diff-hl-mode 1)
	(electric-indent-mode 1) ; auto-indent on enter
	(electric-pair-mode 1) ; match () {} ...
	(global-auto-revert-mode 1) ; revert buffers when file changes on disk
	(setq global-auto-revert-non-file-buffers t)
	(setq auto-revert-verbose nil)
  (global-display-line-numbers-mode)
	(global-eldoc-mode) ; show in echo area the argument list of the function being written
	(global-font-lock-mode 1) ; decorate text
	(global-hl-line-mode 1)
	(global-prettify-symbols-mode 1) ; lambda -> symbol
	(mouse-wheel-mode 1) ; allow scroll by mouse-wheel
	(transient-mark-mode 1) ; don't hide active selected region
	(use-package zoom) ; rebalance awkwardly balanced window divisions
	(zoom-mode 1)
#+end_src
[[https://github.com/dgutov/diff-hl][diff-hl]]. [[https://github.com/cyrus-and/zoom][zoom]].

* Appearance
** Theme
#+begin_src emacs-lisp
	(use-package solarized-theme)
	(load-theme 'solarized-gruvbox-dark t)
#+end_src
[[https://github.com/bbatsov/solarized-emacs][sol-theme]].

** Slightly nicer mode line
#+begin_src emacs-lisp
	(use-package moody)
  (moody-replace-mode-line-buffer-identification)
	(moody-replace-vc-mode) ; branch info
  (setq moody-mode-line-height 15)
#+end_src
[[https://github.com/tarsius/moody][moody]].

* Eshell
#+begin_src emacs-lisp
	(add-hook 'eshell-mode-hook
						(lambda ()
							(local-set-key (kbd "M-p") 'eshell-previous-matching-input-from-input)
							(local-set-key (kbd "M-n") 'eshell-previous-matching-input-from-input)
							))
#+end_src
* Dired
Most useful: replace a regexp across multiple files.
#+begin_src emacs-lisp
	(global-set-key (kbd "C-x C-d") 'dired-jump) ; easier to remember than CxCj
	(add-hook 'dired-mode-hook
						(lambda
							(local-set-key [f1] 'dired-do-find-regexp)
							(local-set-key (kbd "<C-f1>") 'dired-do-find-regexp-and-replace)
							))
#+end_src

* Keybinds
#+begin_src emacs-lisp
	(global-set-key [f1] 'search-forward-regexp)
	(global-set-key (kbd "<C-f1>") 'replace-regexp)
	(global-set-key [f2] 'eshell)
	(global-set-key (kbd "<C-f2>") 'projectile-run-eshell)
	(global-set-key [f3] 'kmacro-end-or-call-macro)
	(global-set-key (kbd "<C-f3>") 'kmacro-start-or-insert-counter)
	(global-set-key (kbd "<M-f3>") 'kmacro-edit-macro-repeat)
	(global-set-key (kbd "<C-M-f3>") 'kmacro-step-edit-macro)
	; give f4-f10 to major mode bindings
	(global-set-key [f4] 'nil)
	(global-set-key [f10] 'nil)
	(global-set-key [f11] 'treemacs)
	(global-set-key (kbd "<C-f11>") 'projectile-switch-project)
	(global-set-key (kbd "<M-f11>") 'projectile-switch-to-buffer-other-frame)
	(global-set-key [f12] 'org-capture)
	(global-set-key (kbd "<C-f12>") 'org-roam-capture)

	(global-set-key (kbd "C-.") 'other-window)
	(global-set-key (kbd "C-,") 'ivy-switch-buffer)
	(global-set-key (kbd "<home>") 'text-scale-increase)
	(global-set-key (kbd "<end>") 'text-scale-decrease)
	(global-set-key (kbd "RET") 'newline-and-indent)
#+end_src
