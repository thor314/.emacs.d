* Global Settings
** Be less annoying and more nice
#+begin_src emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p) ; brevity is the soul of wit
  (setq inhibit-startup-message t
    gc-cons-threshold 2000000 ; default is 800KB, set to 20MB
    read-process-output-max 3000000 ;; incr data read from process. default is 4kb.
    require-final-newline t ; Whether to add a newline automatically at the end of the file.
    next-line-add-newlines t ; add newline on C-n at EOF
    vc-follow-symlinks 't ; What to do if visiting a symbolic link to a file under version control.
    ring-bell-function 'ignore)
  ;; reminder: setq-default: affects global default; setq: sets local value;  all buffers;
  (setq-default indent-tabs-mode nil ; prefer spaces not tabs
    fill-column 75
    dired-listing-switches "-alh" ; add human-readable units
    tab-width 2
    c-basic-offset 2) ; programming modes often use this
  (add-hook 'before-save-hook 'delete-trailing-whitespace)
  ;; Put backups~ and #autosaves# in /tmp
  (setq backup-directory-alist
    `((".*" . ,temporary-file-directory))
    auto-save-file-name-transforms
    `((".*" ,temporary-file-directory t)))
#+end_src

** Turn theses modes off
#+begin_src emacs-lisp
  (auto-composition-mode 0) ; turn off (small diff): text characters automatically composed by functions registered in composition-function-table
  (blink-cursor-mode 0) ; annoying blinking cursor
  (file-name-shadow-mode 0) ; dims unused parts of files in minibuffer
  (line-number-mode 0) ; clutter mode line
  (tool-bar-mode 0)
  (menu-bar-mode 0)
  (scroll-bar-mode 0)
  (set-window-scroll-bars (minibuffer-window) nil nil) ; why scroll bar in minibuffer
#+end_src

** Emacs played in minor key
N2R: Some of these are on by default; explicitness seems good.
#+begin_src emacs-lisp
  (auto-compression-mode 1) ; auto-handle (un)?zip on visit zipped file
  (auto-encryption-mode 1) ; automatic file (en|de)cryption
  (delete-selection-mode 1) ; delete region on entry
  (electric-indent-mode 1) ; auto-indent on enter
  (electric-pair-mode 1) ; match () {} ...
  (global-auto-revert-mode 1) ; revert buffers when file changes on disk; convenient.
  (setq global-auto-revert-non-file-buffers t)
  (setq auto-revert-verbose nil)
  (global-display-line-numbers-mode) ; not to be confused with line-number-mode
  (global-font-lock-mode 1) ; decorate text
  (global-hl-line-mode 1) ; highlight current line
  (global-visual-line-mode) ; wrap long lines
  (global-prettify-symbols-mode 1) ; lambda -> symbol
  (mouse-wheel-mode 1) ; allow scroll by mouse-wheel
  (transient-mark-mode) ; don't hide active selected region
#+end_src
* Unset keys
Explicitly unset some keys that aren't very useful, reserving them for future personal use patterns.
#+begin_src emacs-lisp
  ;; Use this for apps: eshell, dired, spotify, signal, telegram, twitter, stack exchange, etc.
  (global-unset-key (kbd "C-r"))
  ;; tbd what I'll do with these
  (global-unset-key (kbd "C-o"))
  (global-unset-key (kbd "C-;"))
  (global-unset-key (kbd "C-j"))
  (global-unset-key (kbd "M-r"))
  (global-unset-key (kbd "M-'"))
  (global-unset-key (kbd "M-i"))
  (global-unset-key (kbd "M-o"))
  (global-unset-key (kbd "M-p"))
  (global-unset-key (kbd "M-r"))
  ;(global-unset-key (kbd "C-l")) ;;
  ;(global-unset-key (kbd "M-j")) ;; actually useful
  ;; back already? consider unsetting M-c,M-l,M-u,M-h,M-q.
#+end_src
* Notes about mode maps
** Defaults
- M-g movement by line
- M-s special searches
- C-x 8 special characters
** Packages and mine
- C-M-. Movement by smartparens
- C-x v diff-hl
- C-c ! flycheck
* Appearance
** Theme [[https://github.com/bbatsov/solarized-emacs][sol-theme]].
#+begin_src emacs-lisp
  (use-package solarized-theme)
  (load-theme 'solarized-gruvbox-dark t)
#+end_src
** [[https://github.com/cyrus-and/zoom][zoom]] - rebalance awkwardly balanced window divisions
#+begin_src emacs-lisp
	(use-package zoom)
  (zoom-mode 1)
#+end_src

** [[https://github.com/dgutov/diff-hl][diff-hl]] - highlight changes since last git commit
#+begin_src emacs-lisp
	(use-package diff-hl) ; rebalance awkwardly balanced window divisions
  (global-diff-hl-mode)
#+end_src

** Slightly nicer mode line [[https://github.com/tarsius/moody][moody]].
#+begin_src emacs-lisp
  (use-package moody)
  (moody-replace-mode-line-buffer-identification)
  (moody-replace-eldoc-minibuffer-message-function)
  (moody-replace-vc-mode) ; branch info
  (setq moody-mode-line-height 25)
#+end_src
** [[https://github.com/Malabarba/beacon][Beacon]]: pulse line when changing buffer
#+begin_src emacs-lisp
  (use-package beacon)
  (beacon-mode 1)
  ;; make blink small, fast
  (setq beacon-color "#f4a460"
    beacon-size 10
    beacon-blink-duration 0.2
    beacon-blink-delay 0.2)
#+end_src
** Parrot mode [[https://github.com/dp12/parrot][parrot]].
#+begin_src emacs-lisp
  (use-package parrot)
  (setq parrot-num-rotations 15
   parrot-type 'science)
  (parrot-mode)
  (global-set-key (kbd "M-r M-r") 'parrot-start-animation)
  ;; rotate the parrot when save or compilation finishes
  (add-hook 'after-save-hook 'parrot-start-animation)
  (add-to-list 'compilation-finish-functions 'my/parrot-animate-when-compile-success)
#+end_src
** [[https://github.com/jcaw/theme-magic][theme-magic]] Make the rest of linux look more like emacs
dependency: =pip3 install pywal=
#+begin_src emacs-lisp
	(use-package theme-magic)
  (theme-magic-from-emacs)
  ;; update the rest of linux when I update emacs' theme
  (theme-magic-export-theme-mode)
#+end_src
* Eshell - convenient emacs lisp compatible shell, install fish-like [[https://github.com/dieggsy/esh-autosuggest/][autosuggest]]
#+begin_src emacs-lisp
  (use-package esh-autosuggest)
  (add-hook 'eshell-mode-hook
    (lambda ()
      (local-set-key (kbd "M-p") 'eshell-previous-matching-input-from-input)
      (local-set-key (kbd "M-n") 'eshell-next-matching-input-from-input)
      (esh-autosuggest-mode)
      ))
#+end_src
** Eshell tips
*** [[https://masteringemacs.org/article/complete-guide-mastering-eshell][this]] link tldr's useful eshell stuff:
- how eshell interacts with the OS
- subshells
- elisp commands (try: Ch f eshell/*)
- aliases, eg: =alias ff 'find-file $1'=
- pseudo-devices: try overwriting =dev/clip= or =/dev/kill=.
- [[https://www.gnu.org/software/emacs/manual/html_mono/eshell.html][the]] manual

* [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html][Dired]] - simple, useful directory explorer, good regexp search replace
Most useful: replace a regexp across multiple files.
#+begin_src emacs-lisp
  (add-hook 'dired-mode-hook
    (lambda ()
      (local-set-key (kbd "C-%") 'dired-do-query-replace-regexp)
      (local-set-key (kbd "M-%") 'dired-do-find-regexp-and-replace)
      ))
#+end_src
* [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html][Abbrevs]] - often used to correct spelling errors
#+begin_src emacs-lisp
  (setq abbrev-file-name             ;; tell emacs where to read abbrev
    "~/.emacs.d/.abbrev_defs.el"
  save-abbrevs 'silent)        ;; save abbrevs when files are saved
  (setq-default abbrev-mode t)
#+end_src
* [[https://github.com/iqbalansari/restart-emacs/blob/master/restart-emacs.el][restart-emacs]] - smol package for restarting emacs
#+begin_src emacs-lisp
	(use-package restart-emacs)
  (setq restart-emacs-restore-frames t) ;; try to restore frames
  (global-set-key (kbd "C-x c") 'restart-emacs)
#+end_src
* Path adjustments
Sometimes the PATH shell var isn't set correctly. Use this area to modify that. Maybe worth restarting emacs (closing and re-opening) before fiddling with this. Also try =eshell/addpath=.
#+begin_src emacs-lisp
  (setenv "PATH" (concat (getenv "PATH") ":/home/thor/.nvm/versions/node/v17.0.1/bin"))
  (setq exec-path (append exec-path '("/home/thor/.nvm/versions/node/v17.0.1/bin")))
  (setenv "PATH" (concat (getenv "PATH") ":/home/thor/.cargo/bin"))
  (setq exec-path (append exec-path '("/home/thor/.cargo/bin")))
  (setenv "NVM_DIR" "~/.nvm")
#+end_src
* Set github authentication
#+begin_src emacs-lisp
  (setq auth-sources '("~/.authinfo.gpg"))
#+end_src
