* F keys
#+begin_src emacs-lisp
; f1 contains inserts.
  (global-set-key [f2] 'eshell)
  (global-set-key (kbd "<C-f2>") 'projectile-run-eshell) ; runs eshell in project root
  (global-set-key [f3] 'kmacro-end-or-call-macro)
  (global-set-key (kbd "<C-f3>") 'kmacro-start-macro-or-insert-counter)
  (global-set-key (kbd "<M-f3>") 'kmacro-edit-macro-repeat)
  (global-set-key (kbd "<C-M-f3>") 'kmacro-step-edit-macro)
  ; give f5-f10 to major mode bindings

  (global-set-key [f10] 'nil)
  (global-set-key [f11] 'treemacs) ; not convinced I want treemacs annd projectile here.
  (global-set-key (kbd "<C-f11>") 'projectile-switch-project)
  (global-set-key (kbd "<M-f11>") 'projectile-switch-to-buffer-other-frame)
  (global-set-key [f12] 'org-capture)
  (global-set-key (kbd "<C-f12>") 'org-roam-capture)
  (global-set-key (kbd "<M-f12>") 'org-journal-new-entry)
  ;; warning. Don't try to set C-M-f12. Turns screen off.
#+end_src

* Nice stuff
#+begin_src emacs-lisp
  (global-set-key (kbd "C-%") 'replace-regexp)
  (global-set-key (kbd "M-%") 'replace-string)
  (global-set-key (kbd "C-M-%") 'query-replace-string)
#+end_src
* My functions
#+begin_src emacs-lisp
  (global-set-key (kbd "C-!") 'window-split-toggle)
  (global-set-key (kbd "C-h C-h") 'describe-thing)
#+end_src

* Dired and Eshell
#+begin_src emacs-lisp
  (global-set-key (kbd "C-x C-d") 'dired-jump) ; easier to remember than CxCj
#+end_src

* Ivy, Avy, Swiper
#+begin_src emacs-lisp
  (global-set-key (kbd "M-p") 'avy-goto-char)
  (global-set-key (kbd "C-'") 'avy-goto-char)
  (global-set-key (kbd "C-x b") 'ivy-switch-buffer)
  (global-set-key (kbd "C-c v") 'ivy-push-view)
  (global-set-key (kbd "C-c V") 'ivy-pop-view)
  (global-set-key (kbd "C-c z") 'ivy-switch-view) ; low usage
  (global-set-key (kbd "C-c r") 'ivy-resume)
  (global-set-key (kbd "C-s") 'swiper-isearch)
  (global-set-key (kbd "C-r") 'swiper-isearch-backward)
#+end_src

* Counsel (Projectile)
#+begin_src emacs-lisp
  (global-set-key (kbd "C-c p SPC") 'counsel-projectile)
  (global-set-key (kbd "C-c p d") 'counsel-projectile-find-dir)
  (global-set-key (kbd "C-c p s") 'projectile-switch-project)
  (global-set-key (kbd "C-c p r") 'projectile-remove-known-project)
  (global-set-key (kbd "C-c p a") 'projectile-add-known-project)

  (global-set-key (kbd "C-h l") 'counsel-find-library)
  (global-set-key (kbd "C-c b") 'counsel-bookmark) ; note: bkmks overlap with ivy-view
  (global-set-key (kbd "C-c k") 'counsel-rg)
  (global-set-key (kbd "M-x") 'counsel-M-x)
  (global-set-key (kbd "<menu>") 'counsel-M-x)
  (global-set-key (kbd "C-x C-f") 'counsel-find-file)
  (global-set-key (kbd "C-x f") 'counsel-find-file)
  (global-set-key (kbd "M-y") 'counsel-yank-pop) ; nicer kill ring
  (global-set-key (kbd "C-h f") 'counsel-describe-function)
  (global-set-key (kbd "C-h v") 'counsel-describe-variable)

  (global-set-key (kbd "C-c m") 'counsel-linux-app)
  (global-set-key (kbd "C-c l") 'counsel-locate)
  (global-set-key (kbd "C-c w") 'counsel-wmctrl)
  (global-set-key (kbd "C-c L") 'counsel-git-log) ; seldom used
#+end_src

* Window and formatting
#+begin_src emacs-lisp
  (global-set-key (kbd "C-.") 'other-window)
  (global-set-key (kbd "C-,") 'ivy-switch-buffer)
  (global-set-key (kbd "<home>") 'text-scale-increase)
  (global-set-key (kbd "<end>") 'text-scale-decrease)
  (global-set-key (kbd "RET") 'newline-and-indent)
#+end_src
* Misc packages
#+begin_src emacs-lisp
  (global-set-key (kbd "C-c t") 'twit)
#+end_src

* Org things
#+begin_src emacs-lisp
  (global-set-key (kbd "C-c l") 'org-store-link) ; a link to dir in org file
  (global-set-key (kbd "C-c a") 'org-agenda)
  (global-set-key (kbd "C-c c") 'org-capture)
#+end_src
