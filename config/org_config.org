* Variable spaced font
Prefer variable-spaced font when looking at text, monospaced when looking at code. Variable-pitch screws a bunch of things up, so copy pasta a soln in.
https://github.com/daviwil/emacs-from-scratch/blob/master/Emacs.org/#better-font-faces
#+begin_src emacs-lisp
  (defun tk/org-font-setup ()
    """variable-pitch-mode makes text display inconsistent; fix the inconsistencies"""
    ;; Set faces for heading levels
    (dolist (face '((org-level-1 . 1.2)
                     (org-level-2 . 1.1)
                     (org-level-3 . 1.05)
                     (org-level-4 . 1.0)
                     (org-level-5 . 1.1)
                     (org-level-6 . 1.1)
                     (org-level-7 . 1.1)
                     (org-level-8 . 1.1)))
      (set-face-attribute (car face) nil :font "Cantarell" :weight 'regular :height (cdr face)))
    ;; Ensure that anything that should be fixed-pitch in Org files appears that way
    (set-face-attribute 'org-block nil    :foreground nil :inherit 'fixed-pitch)
    (set-face-attribute 'org-table nil    :inherit 'fixed-pitch)
    (set-face-attribute 'org-formula nil  :inherit 'fixed-pitch)
    (set-face-attribute 'org-code nil     :inherit '(shadow fixed-pitch))
    (set-face-attribute 'org-table nil    :inherit '(shadow fixed-pitch))
    (set-face-attribute 'org-verbatim nil :inherit '(shadow fixed-pitch))
    (set-face-attribute 'org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))
    (set-face-attribute 'org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))
    (set-face-attribute 'org-checkbox nil  :inherit 'fixed-pitch)
    (set-face-attribute 'line-number nil :inherit 'fixed-pitch)
    (set-face-attribute 'line-number-current-line nil :inherit 'fixed-pitch))
#+end_src
* Quick packages
- [[https://github.com/integral-dw/org-superstar-mode][org-superstar-mode: Make org-mode stars a little more super]]
- [[https://github.com/rexim/org-cliplink][org-cliplink: Insert org-mode links from clipboard]]
- [[https://github.com/abo-abo/org-download][org-download: Drag and drop images to Emacs org-mode]]
- [[https://github.com/bastibe/org-journal][org-journal: A simple org-mode based journaling mode]]
#+begin_src emacs-lisp
  (defun tk/org-load-packages ()
    (use-package org-superstar ;; supercedes org-bullets:
      :config
      (org-superstar-mode)
      ;; This line is necessary.
      (setq org-superstar-leading-bullet ?\s)
      ;; If you use Org Indent you also need to add this, otherwise the
      ;; above has no effect while Indent is enabled.
      (org-indent-mode)
      (setq org-indent-mode-turns-on-hiding-stars nil)
      (setq org-ellipsis " â–¾"))
    ;; Turn on the following with org-bullets for nicer looking outlines
    ;; issue: supposed to work with twitter threads, currently broken though, couldn't figure out how to fix.
    (use-package org-cliplink) ; bound to C-c y
    (use-package org-download)
    (add-hook 'dired-mode-hook 'org-download-enable)
    ;; Use the heck out of org-journal
    (use-package org-journal)

    ;; org-habit is a built in library for tracking stuff about repeating tasks
    ;; why use: habits displayed with consistency graph: How consistent at getting that task done.
    (require 'org-habit)
    (add-to-list 'org-modules 'org-habit)
    (setq org-habit-graph-column 60)

    ;; variable pitch mode looks good in text buffers without code blocks
    (setq org-journal-dir "~/org/journal"
      org-journal-file-format "%Y%m%d.org"))

#+end_src
* Tags
Default tags available in org files. Syntax =?x= for literal ASCII value of x.
#+begin_src emacs-lisp
  (defun tk/org-setup-tags ()
    (setq org-tag-alist
      '((:startgroup)
         ;; Put mutually exclusive tags here
         (:endgroup)
         ("CRYPTO" . ?c)
         ("EMACS" . ?e)
         ("HABIT" . ?h)
         ("LINUX" . ?l)
         ("MATH" . ?m)
         ("NOTE" . ?n)
         ("PERS" . ?p)
         ("RUST" . ?r)
         ("WRITE" . ?w)
         ("MISC" . ?z))))
#+end_src
[[https://orgmode.org/manual/Tags.html#Tags][tags]].
* Agenda
[[https://orgmode.org/manual/Agenda-Commands.html][Agenda Commands (The Org Manual)]]
[[https://github.com/alphapapa/org-super-agenda][look into super agenda, eventually]].
#+begin_src emacs-lisp
  (defun tk/org-setup-agenda ()
    (setq org-agenda-files '("~/org/agenda/")
      ;; 2021-11-29 currently not used to the full extent, want to auto-refile done todos to here
      org-archive-location "~/org/agenda/archive.org"
      org-priority-default 80 ;; between C and B
      org-agenda-start-with-log-mode t ;; log includes done entries
      org-log-into-drawer t) ;; Non-nil=>insert state change notes, timestamps into a drawer.
    ;; (add-hook 'org-todo-after-state-change-hook
    ;;   (lambda ()
    ;;  (org-refile nil nil '("archive" "~/org/agenda/archive.org" ))
    ;;     ;; if state changed to DONE or CANC, refile to archive.org
    ;;     ))

    (setq org-agenda-custom-commands ; options - todo, tags, tags-todo
      '(
         ("y" agenda*) ;; appointments: todo
         ("c" "Crypto" tags-todo "CRYPTO")
         ("e" "Emacs" tags-todo "EMACS")
         ;; ex multi letter
         ;;("g" . "HOME+Name tags searches")
         ;;("gl" tags "+home+HABIT")
         ;;("gp" tags "+home+EMACS")
         ("h" "Habit" tags-todo "HABIT")
         ("l" "Linux" tags-todo "Linux")
         ("m" "Math" tags-todo "MATH")
         ("r" "Rust" tags-todo "RUST")
         ("p" "Personal" tags-todo "PERS")
         ("w" "Write" tags-todo "WRITE")
         ("z" "Misc" tags-todo "MISC")
         ;; demo of more powerful agenda template
         ;; ("d" "Dashboard"
         ;;   ;; bug: ==== bit is 5 chars too long for my screen
         ;;   ((agenda "" ((org-deadline-warning-days 7)))
         ;;     (todo "NEXT"
         ;;       ((org-agenda-overriding-header "Next Tasks")))
         ;;     (tags-todo "agenda/ACTIVE" ((org-agenda-overriding-header "Active Projects")))))
         ))
    (add-hook 'org-agenda-mode-hook
      (lambda ()
        (setq org-agenda-start-on-weekday nil ; start today
          org-agenda-hide-tags-regexp ".*" ; hide all tags
          org-agenda-include-deadlines t
          org-agenda-include-diary t
          org-agenda-loop-over-headlines-in-active-region nil
          org-agenda-restore-windows-after-quit t
          org-agenda-skip-deadline-if-done t
          org-agenda-skip-deadline-prewarning-if-scheduled 'pre-scheduled
          org-agenda-todo-ignore-deadlines 'far
          org-journal-enable-agenda-integration t)  ; include org-journal todos in agenda
        )))
#+end_src
[[https://orgmode.org/manual/Agenda-Views.html][agenda]].
* Org-specific keybinds
#+begin_src emacs-lisp
  (add-hook 'org-mode-hook
    (lambda ()
      ;; following 3 are for debugging
      (global-set-key [f5] 'polymode-minor-mode)
      (global-set-key (kbd "C-<f5>") 'poly-org-mode)
      (global-set-key [f6] 'buffer-face-mode)
      (local-set-key (kbd "C-c y") 'org-cliplink) ;; similar to my function (see next line)
      (local-set-key (kbd "C-; y") 'link-last-word-from-kill)
      (local-set-key (kbd "C-c C-r") 'org-schedule)
      (local-set-key (kbd "<f1> e") 'tk-org-insert-lisp-block)
      (local-set-key (kbd "<f1> p") 'tk-org-insert-python-block)
      (local-set-key (kbd "<f1> r") 'tk-org-insert-rust-block)
      (local-set-key (kbd "<f1> d") 'insert-date)
      (global-set-key (kbd "<f1> d") 'insert-date)
      (local-set-key (kbd "C-'") 'avy-goto-char) ; overwrite switch agenda files
      (local-set-key (kbd "C-,") 'ivy-switch-buffer)
      (local-set-key (kbd "C-.") 'other-window)))
#+end_src
* Org-roam- Cc n [lfgic]
[[https://www.orgroam.com/manual/][docs]] and [[https://github.com/org-roam/org-roam][source]].
** Setup
Create a file: Org roam find file
#+begin_src emacs-lisp
  (setq org-roam-v2-ack t)
  (use-package org-roam)
  (add-hook 'org-mode-hook
    (lambda ()
      (setq company-mode nil) ;; gets annoying with text completes
      (local-set-key (kbd "C-c n r") 'org-roam)
      (local-set-key (kbd "C-c n n") 'org-roam-ref-add)
      (local-set-key (kbd "C-c n i") 'org-roam-insert)
      (local-set-key (kbd "C-c n I") 'org-roam-insert-immediate)
      (local-set-key (kbd "C-c n f") 'org-roam-find-file)
      (local-set-key (kbd "C-c n g") 'org-roam-graph)
      (local-set-key (kbd "C-c n a") 'org-roam-tag-add)
      (local-set-key (kbd "C-c n d") 'org-roam-tag-delete)
      ))

  ;; enables org-roam on startup
  ;(add-hook 'after-init-hook 'org-roam-mode) ; 2021-08-30 no such org roam mode
  (setq org-roam-directory "~/org/roam")
  (setq org-roam-completion-system 'ivy)
  ;; optional index file keeps links to main files
  ;; (setq org-roam-index-file "index.org")
#+end_src
* Hook
#+begin_src emacs-lisp
  (use-package org
    :pin org ;; Pin the package to an archive
    :commands (org-capture org-agenda) ;; load the package
    :config
    (add-hook 'org-mode-hook
      (lambda ()
        (tk/org-font-setup)
        (variable-pitch-mode 1)
        (tk/org-load-packages)
        (tk/org-setup-tags)
        (tk/org-setup-agenda)
        ;; See manual 5.2.3. (x) - fast select. ! - timestamp it. @ - note w
        ;; timestamp. default: TODO, DONE. Can set this to have more complex
        ;; project management. A bit overkill, but good demo
        (setq org-todo-keywords
          '((sequence "TODO(t)" "NEXT(n)" "|" "DONE(d!)")
             (sequence "BACKLOG(b)" "PLAN(p)" "READY(r)" "ACTIVE(a)" "REVIEW(v)" "WAIT(w@/!)" "|" "CANC(k@/!)")))
        ;; Save Org buffers after refiling, confirm saving fewer files on emacs exit
        (advice-add 'org-refile :after 'org-save-all-org-buffers)

        ;; settings
        (setq org-src-fontify-natively t ; syntax-highlight if org recognizes src block
          org-src-tab-acts-natively t ; use programming major modes in src blocks
          org-adapt-indentation nil ; turn off special indentation in org subsections
          org-directory "~/org"
          org-log-done 'time) ; timestamp when TODO - DONE
        )))
#+end_src
