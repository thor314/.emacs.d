* Rustic - lsp extensions to rust-mode
#+begin_src emacs-lisp
	(use-package rustic) ; lsp-compatible rust mode
	(add-hook 'rust-mode-hook 'rustic-mode)
	(add-hook 'rustic-mode-hook
						(lambda ()
							(setq rustic-lsp-server 'rust-analyzer) ; not rls
							(setq lsp-rust-analyzer-server-command '("~/.cargo/bin/rust-analyzer"))
							;(setq rustic-format-on-save t) ; has annoying bug move point to other buffer bug
							(setq rustic-indent-offset 2)
						  (setq rustic-match-angle-brackets nil)
))
#+end_src
[[https://github.com/brotzeit/rustic][rustic]]. [[https://rust-analyzer.github.io/manual.html][rust-analyzer]].

* Cargo binds and Toml mode fontlock
#+begin_src emacs-lisp
	(use-package cargo)
	(add-hook 'rust-mode-hook 'cargo-minor-mode)
	(use-package toml-mode) ; syntax highlighting in toml files
#+end_src
[[https://github.com/kwrooijen/cargo.el][cargo]]. [[https://github.com/dryman/toml-mode.el][toml-mode]].

* Flycheck
#+begin_src emacs-lisp
	(use-package flycheck-rust) ; runs on save buffer
#+end_src
[[https://github.com/flycheck/flycheck-rust][flycheck-rust]].

* Org-babel rust integration
#+begin_src emacs-lisp
	(use-package ob-rust)
#+end_src
[[https://github.com/micanzhang/ob-rust][ob-rust]].

* get a rust playground
#+begin_src emacs-lisp
	(use-package rust-playground)
#+end_src
[[https://github.com/grafov/rust-playground][rust-playground]]. Note. C-RET => compile in playground

* Keybinds
#+begin_src emacs-lisp
	(add-hook 'rustic-mode-hook
						(lambda ()
							(local-set-key (kbd "C-$") 'rustic-cargo-build)
							(local-set-key (kbd "C-\\") 'rustic-cargo-build)
							(local-set-key (kbd "M-\\") 'rustic-cargo-test)
							(local-set-key [f9] 'next-error)
							(local-set-key [f10] 'lsp-execute-code-action)
							(local-set-key (kbd "C-c C-c C-a") 'cargo-proccess-add)
							))
	(add-hook 'rustic-compilation-mode-hook
						(lambda ()
							(local-set-key [f9] 'compilation-next-error)
							))
#+end_src
