* Ivy, the ido replacement. M-o to get actions.
N2R. Ivy and Helm are nearly identical. Ivy is faster. Helm has better grepping. I use =rigrep= to overcome this.
[[https://writequit.org/denver-emacs/presentations/2017-04-11-ivy.html][quick-guide]]. [[https://writequit.org/denver-emacs/presentations/2017-04-11-ivy.html][ivy user manual]]: suggests many keybindings.
#+begin_src emacs-lisp
	(use-package ivy) ; intentional redundancy; counsel installs ivy.
	(setq ivy-use-virtual-buffers t ; add recents+bkmks to ivy-switch-buffer
				ivy-count-format "%d/%d ")
	(setq ivy-display-style 'fancy) ; regex-enabled
	(ivy-mode 1)
	(global-set-key (kbd "C-x b") 'ivy-switch-buffer)
	(global-set-key (kbd "C-c v") 'ivy-push-view)
	(global-set-key (kbd "C-c V") 'ivy-pop-view)
	(global-set-key (kbd "C-c z") 'ivy-switch-view)
	(global-set-key (kbd "C-c r") 'ivy-resume)
#+end_src

* Ivy rich, more self-documenting interface
#+begin_src emacs-lisp
	(use-package ivy-rich)
	(ivy-rich-mode 1)
	(setcdr (assq t ivy-format-functions-alist) #'ivy-format-function-line) ; formatting
	(setq ivy-rich-path-style 'abbrev) ; abbreviate paths with ~/
#+end_src
[[https://github.com/Yevgnen/ivy-rich][ivy rich]].

* Swiper
#+begin_src emacs-lisp
	(use-package swiper) ; better isearch
	(global-set-key (kbd "C-s") 'swiper-isearch)
	(global-set-key (kbd "C-r") 'swiper-isearch-backward)
#+end_src

* Counsel
 Chain actions. Allow regex. Useful rings.
** Standard commands
#+begin_src emacs-lisp
	(use-package counsel)
	(global-set-key (kbd "C-h l") 'counsel-find-library)
	(global-set-key (kbd "C-c b") 'counsel-bookmark) ; note: bkmks overlap with ivy-view
	(global-set-key (kbd "C-c k") 'counsel-rg)
	(global-set-key (kbd "M-x") 'counsel-M-x)
	(global-set-key (kbd "<menu>") 'counsel-M-x)
	(global-set-key (kbd "C-x C-f") 'counsel-find-file)
	(global-set-key (kbd "C-x f") 'counsel-find-file)
	(global-set-key (kbd "M-y") 'counsel-yank-pop) ; nicer kill ring
	(global-set-key (kbd "C-h f") 'counsel-describe-function)
	(global-set-key (kbd "C-h v") 'counsel-describe-variable)
#+end_src

** System interface
#+begin_src emacs-lisp
(global-set-key (kbd "C-c k") 'counsel-rg)
(global-set-key (kbd "C-c m") 'counsel-linux-app)
(global-set-key (kbd "C-c l") 'counsel-locate)
(global-set-key (kbd "C-c w") 'counsel-wmctrl)
(global-set-key (kbd "C-c L") 'counsel-git-log) ; seldom used
#+end_src

* Counsel-Projectile
#+begin_src emacs-lisp
	(use-package counsel-projectile)
	(global-set-key (kbd "C-c p SPC") 'counsel-projectile)
	(global-set-key (kbd "C-c p d") 'counsel-projectile-find-dir)
	(global-set-key (kbd "C-c p s") 'projectile-switch-project)
	(global-set-key (kbd "C-c p r") 'projectile-remove-known-project)
	(global-set-key (kbd "C-c p a") 'projectile-add-known-project)
#+end_src
[[https://github.com/ericdanan/counsel-projectile][counsel projectile]].

* Avy
#+begin_src emacs-lisp
	(use-package avy)
	(global-set-key (kbd "M-p") 'avy-goto-char)
	(global-set-key (kbd "C-'") 'avy-goto-char)
#+end_src
[[https://github.com/abo-abo/avy][avy]].
