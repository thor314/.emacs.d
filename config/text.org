* Markdown
I basically only use markdown for README's.
#+begin_src emacs-lisp
  (add-hook 'markdown-mode-hook
    (lambda ()
      (turn-off-auto-fill)))
#+end_src
* Poly mode for native code blocks in org and markdown
#+begin_src emacs-lisp
  (use-package polymode)
  (use-package poly-org)
  (add-to-list 'auto-mode-alist '("\\.org" . poly-org-mode))
  (use-package poly-markdown)
  (add-to-list 'auto-mode-alist '("\\.md" . poly-markdown-mode))
#+end_src
[[https://polymode.github.io/usage/][polymode]].
* Flyspell
#+begin_src emacs-lisp
  (add-hook 'flyspell-mode-hook
    (lambda ()
      (define-key flyspell-mode-map (kbd "C-.") nil)
      (define-key flyspell-mode-map (kbd "C-,") nil)
      ))
#+end_src
* [[https://github.com/SavchenkoValeriy/emacs-powerthesaurus][Thesaurus]] - not great; only gives one word without a pro subscription ($30/yr).
#+begin_src emacs-lisp
	(use-package powerthesaurus)
#+end_src
* Text-mode hook
#+begin_src emacs-lisp
  (add-hook 'text-mode-hook
    (lambda ()
      ;; nts. auto-fill looks nice, but makes a lot of formatting things
      ;; a pain in the ass, and I'm too lazy to fix them all.
                                        ;(turn-on-auto-fill)
      (setq sentence-end-double-space nil) ; single space after periods
      (setq line-number-mode nil)
      ;; note: turn flyspell mode on for syntax highlighting
      (local-set-key (kbd "M-j") 'org-meta-return)
      (local-set-key (kbd "<f9>") 'flyspell-goto-next-error)
      (local-set-key (kbd "C-<f9>") 'flyspell-correct-word)
      (local-set-key (kbd "M-<f9>") 'flyspell-correct-previous-word)
      (local-set-key (kbd "C-M-<f9>") 'flyspell-mode)
      (local-set-key (kbd "C-<f10>") 'powerthesaurus-lookup-word-dwim)
      ))
#+end_src
Ispell support packages: Hunspell and Hunspell-english sold separately.
* Font lock - special highlighting; disabled
: #+begin_src emacs-lisp
  (add-hook 'org-mode-hook ; mostly just an example
    (lambda ()
      (font-lock-add-keywords nil '(("\\<\\(thor\\|THOR\\|tk\\|TK\\)\\>" 1 font-lock-warning-face t)))
      ))
#+end_src

* =org-mobile=  Sync's my org directories to my phone. - BUG: prevents quit until Dropbox installed
: #+begin_src emacs-lisp
  (use-package org-mobile-sync)
  (setq org-mobile-inbox-for-pull "~/org/org_mobile_pull_inbox.org")
  (setq org-mobile-directory "~/Dropbox/Apps/MobileOrg")
  (setq org-mobile-files '("~/org/agenda" "~/org/cap"  "~/org/note"))
  ; automate push if emacs is idle for 30s and on emacs exit
  (run-with-idle-timer 30 nil 'org-mobile-push)
  (add-hook 'kill-emacs-hook 'org-mobile-push)
: #+end_src
[[https://mobileorg.github.io/features/][org-mobile]].

* Electric Pair mode (auto-match pairs) - disabled
https://stackoverflow.com/questions/27871876/custom-pairs-in-emacs-electric-pair-mode
Commented out 2021-11-05, too inconsistently useful.
: #+begin_src emacs-lisp
  ;(defvar tk-org-mode-electric-pairs '((?= . ?=)  "Custom electric pairs for org-mode."))
  ;(defun org-mode-add-electric-pairs ()
    ;(setq-local electric-pair-pairs (append electric-pair-pairs tk-org-mode-electric-pairs))
    ;(setq-local electric-pair-text-pairs electric-pair-pairs))
#+end_src
